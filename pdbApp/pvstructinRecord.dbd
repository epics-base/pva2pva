#*************************************************************************
# Copyright (c) 2020 Michael Davidsaver
# EPICS BASE is distributed subject to a Software License Agreement found
# in file LICENSE that is included with this distribution.
#*************************************************************************

include "menuFtype.dbd"

recordtype(pvstructin) {
    include "dbCommon.dbd"
    %/* Declare Device Support Entry Table */
    %#include <string>
    %#include <dbAccess.h>
    %#include <pv/bitSet.h>
    %#include <pv/pvData.h>
    %#include <shareLib.h>
    %#include <pv/qsrv.h>
    %#ifdef __cplusplus
    %extern "C" {
    %#endif
    %QSRV_API extern const VFieldType vfStructure;
    %struct VSharedStructure {
    %    const VFieldType* vtype;
    %    epics::pvData::StructureConstPtr* value;
    %};
    %QSRV_API extern const VFieldType vfPVStructure;
    %struct VSharedPVStructure {
    %    const VFieldType* vtype;
    %    const epics::pvData::PVStructurePtr* value;
    %    epics::pvData::BitSet* changed;
    %};
    %typedef struct pvstructindset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_pvs)(struct pvstructinRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} pvstructindset;
    %#define HAS_pvstructindset
    %#ifdef __cplusplus
    %}
    %#endif
    field(VAL,DBF_NOACCESS) {
        prompt("Current Value")
        promptgroup("40 - Input")
        asl(ASL0)
        pp(TRUE)
        special(SPC_DBADDR)
        extra("::epics::pvData::PVStructurePtr val")
    }
    field(CHG,DBF_NOACCESS) {
        prompt("Change Mask")
        interest(3)
        special(SPC_NOMOD)
        extra("::epics::pvData::BitSet chg")
    }
    field(PTYP,DBF_NOACCESS) {
        prompt("Type")
        interest(3)
        special(SPC_DBADDR)
        extra("::epics::pvData::StructureConstPtr ptyp")
    }
    field(INP,DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
}

device(pvstructin, CONSTANT, devPVSISoft, "Soft Channel")
